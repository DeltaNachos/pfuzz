// Verilated -*- C++ -*-
// DESCRIPTION: Verilator output: Design implementation internals
// See Vrv32im_top.h for the primary calling header

#include "verilated.h"
#include "verilated_dpi.h"

#include "Vrv32im_top__Syms.h"
#include "Vrv32im_top_riscv_issue__SE1.h"

VL_ATTR_COLD void Vrv32im_top_riscv_issue__SE1___ctor_var_reset(Vrv32im_top_riscv_issue__SE1* vlSelf) {
    if (false && vlSelf) {}  // Prevent unused
    Vrv32im_top__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    VL_DEBUG_IF(VL_DBG_MSGF("+          Vrv32im_top_riscv_issue__SE1___ctor_var_reset\n"); );
    // Body
    vlSelf->__PVT__clk_i = VL_RAND_RESET_I(1);
    vlSelf->__PVT__rst_i = VL_RAND_RESET_I(1);
    vlSelf->__PVT__fetch_valid_i = VL_RAND_RESET_I(1);
    vlSelf->__PVT__fetch_instr_i = VL_RAND_RESET_I(32);
    vlSelf->__PVT__fetch_pc_i = VL_RAND_RESET_I(32);
    vlSelf->__PVT__fetch_fault_fetch_i = VL_RAND_RESET_I(1);
    vlSelf->__PVT__fetch_fault_page_i = VL_RAND_RESET_I(1);
    vlSelf->__PVT__fetch_instr_exec_i = VL_RAND_RESET_I(1);
    vlSelf->__PVT__fetch_instr_lsu_i = VL_RAND_RESET_I(1);
    vlSelf->__PVT__fetch_instr_branch_i = VL_RAND_RESET_I(1);
    vlSelf->__PVT__fetch_instr_mul_i = VL_RAND_RESET_I(1);
    vlSelf->__PVT__fetch_instr_div_i = VL_RAND_RESET_I(1);
    vlSelf->__PVT__fetch_instr_csr_i = VL_RAND_RESET_I(1);
    vlSelf->__PVT__fetch_instr_rd_valid_i = VL_RAND_RESET_I(1);
    vlSelf->__PVT__fetch_instr_invalid_i = VL_RAND_RESET_I(1);
    vlSelf->__PVT__branch_exec_request_i = VL_RAND_RESET_I(1);
    vlSelf->__PVT__branch_exec_is_taken_i = VL_RAND_RESET_I(1);
    vlSelf->__PVT__branch_exec_is_not_taken_i = VL_RAND_RESET_I(1);
    vlSelf->__PVT__branch_exec_source_i = VL_RAND_RESET_I(32);
    vlSelf->__PVT__branch_exec_is_call_i = VL_RAND_RESET_I(1);
    vlSelf->__PVT__branch_exec_is_ret_i = VL_RAND_RESET_I(1);
    vlSelf->__PVT__branch_exec_is_jmp_i = VL_RAND_RESET_I(1);
    vlSelf->__PVT__branch_exec_pc_i = VL_RAND_RESET_I(32);
    vlSelf->__PVT__branch_d_exec_request_i = VL_RAND_RESET_I(1);
    vlSelf->__PVT__branch_d_exec_pc_i = VL_RAND_RESET_I(32);
    vlSelf->__PVT__branch_d_exec_priv_i = VL_RAND_RESET_I(2);
    vlSelf->__PVT__branch_csr_request_i = VL_RAND_RESET_I(1);
    vlSelf->__PVT__branch_csr_pc_i = VL_RAND_RESET_I(32);
    vlSelf->__PVT__branch_csr_priv_i = VL_RAND_RESET_I(2);
    vlSelf->__PVT__writeback_exec_value_i = VL_RAND_RESET_I(32);
    vlSelf->__PVT__writeback_mem_valid_i = VL_RAND_RESET_I(1);
    vlSelf->__PVT__writeback_mem_value_i = VL_RAND_RESET_I(32);
    vlSelf->__PVT__writeback_mem_exception_i = VL_RAND_RESET_I(6);
    vlSelf->__PVT__writeback_mul_value_i = VL_RAND_RESET_I(32);
    vlSelf->__PVT__writeback_div_valid_i = VL_RAND_RESET_I(1);
    vlSelf->__PVT__writeback_div_value_i = VL_RAND_RESET_I(32);
    vlSelf->__PVT__csr_result_e1_value_i = VL_RAND_RESET_I(32);
    vlSelf->__PVT__csr_result_e1_write_i = VL_RAND_RESET_I(1);
    vlSelf->__PVT__csr_result_e1_wdata_i = VL_RAND_RESET_I(32);
    vlSelf->__PVT__csr_result_e1_exception_i = VL_RAND_RESET_I(6);
    vlSelf->__PVT__lsu_stall_i = VL_RAND_RESET_I(1);
    vlSelf->__PVT__take_interrupt_i = VL_RAND_RESET_I(1);
    vlSelf->__PVT__fetch_accept_o = VL_RAND_RESET_I(1);
    vlSelf->__PVT__branch_request_o = VL_RAND_RESET_I(1);
    vlSelf->__PVT__branch_pc_o = VL_RAND_RESET_I(32);
    vlSelf->__PVT__branch_priv_o = VL_RAND_RESET_I(2);
    vlSelf->__PVT__exec_opcode_valid_o = VL_RAND_RESET_I(1);
    vlSelf->__PVT__lsu_opcode_valid_o = VL_RAND_RESET_I(1);
    vlSelf->__PVT__csr_opcode_valid_o = VL_RAND_RESET_I(1);
    vlSelf->__PVT__mul_opcode_valid_o = VL_RAND_RESET_I(1);
    vlSelf->__PVT__div_opcode_valid_o = VL_RAND_RESET_I(1);
    vlSelf->__PVT__opcode_opcode_o = VL_RAND_RESET_I(32);
    vlSelf->__PVT__opcode_pc_o = VL_RAND_RESET_I(32);
    vlSelf->__PVT__opcode_invalid_o = VL_RAND_RESET_I(1);
    vlSelf->__PVT__opcode_rd_idx_o = VL_RAND_RESET_I(5);
    vlSelf->__PVT__opcode_ra_idx_o = VL_RAND_RESET_I(5);
    vlSelf->__PVT__opcode_rb_idx_o = VL_RAND_RESET_I(5);
    vlSelf->__PVT__opcode_ra_operand_o = VL_RAND_RESET_I(32);
    vlSelf->__PVT__opcode_rb_operand_o = VL_RAND_RESET_I(32);
    vlSelf->__PVT__lsu_opcode_opcode_o = VL_RAND_RESET_I(32);
    vlSelf->__PVT__lsu_opcode_pc_o = VL_RAND_RESET_I(32);
    vlSelf->__PVT__lsu_opcode_invalid_o = VL_RAND_RESET_I(1);
    vlSelf->__PVT__lsu_opcode_rd_idx_o = VL_RAND_RESET_I(5);
    vlSelf->__PVT__lsu_opcode_ra_idx_o = VL_RAND_RESET_I(5);
    vlSelf->__PVT__lsu_opcode_rb_idx_o = VL_RAND_RESET_I(5);
    vlSelf->__PVT__lsu_opcode_ra_operand_o = VL_RAND_RESET_I(32);
    vlSelf->__PVT__lsu_opcode_rb_operand_o = VL_RAND_RESET_I(32);
    vlSelf->__PVT__mul_opcode_opcode_o = VL_RAND_RESET_I(32);
    vlSelf->__PVT__mul_opcode_pc_o = VL_RAND_RESET_I(32);
    vlSelf->__PVT__mul_opcode_invalid_o = VL_RAND_RESET_I(1);
    vlSelf->__PVT__mul_opcode_rd_idx_o = VL_RAND_RESET_I(5);
    vlSelf->__PVT__mul_opcode_ra_idx_o = VL_RAND_RESET_I(5);
    vlSelf->__PVT__mul_opcode_rb_idx_o = VL_RAND_RESET_I(5);
    vlSelf->__PVT__mul_opcode_ra_operand_o = VL_RAND_RESET_I(32);
    vlSelf->__PVT__mul_opcode_rb_operand_o = VL_RAND_RESET_I(32);
    vlSelf->__PVT__csr_opcode_opcode_o = VL_RAND_RESET_I(32);
    vlSelf->__PVT__csr_opcode_pc_o = VL_RAND_RESET_I(32);
    vlSelf->__PVT__csr_opcode_invalid_o = VL_RAND_RESET_I(1);
    vlSelf->__PVT__csr_opcode_rd_idx_o = VL_RAND_RESET_I(5);
    vlSelf->__PVT__csr_opcode_ra_idx_o = VL_RAND_RESET_I(5);
    vlSelf->__PVT__csr_opcode_rb_idx_o = VL_RAND_RESET_I(5);
    vlSelf->__PVT__csr_opcode_ra_operand_o = VL_RAND_RESET_I(32);
    vlSelf->__PVT__csr_opcode_rb_operand_o = VL_RAND_RESET_I(32);
    vlSelf->__PVT__csr_writeback_write_o = VL_RAND_RESET_I(1);
    vlSelf->__PVT__csr_writeback_waddr_o = VL_RAND_RESET_I(12);
    vlSelf->__PVT__csr_writeback_wdata_o = VL_RAND_RESET_I(32);
    vlSelf->__PVT__csr_writeback_exception_o = VL_RAND_RESET_I(6);
    vlSelf->__PVT__csr_writeback_exception_pc_o = VL_RAND_RESET_I(32);
    vlSelf->__PVT__csr_writeback_exception_addr_o = VL_RAND_RESET_I(32);
    vlSelf->__PVT__exec_hold_o = VL_RAND_RESET_I(1);
    vlSelf->__PVT__mul_hold_o = VL_RAND_RESET_I(1);
    vlSelf->__PVT__interrupt_inhibit_o = VL_RAND_RESET_I(1);
    vlSelf->__PVT__enable_muldiv_w = VL_RAND_RESET_I(1);
    vlSelf->__PVT__enable_mul_bypass_w = VL_RAND_RESET_I(1);
    vlSelf->__PVT__stall_w = VL_RAND_RESET_I(1);
    vlSelf->__PVT__squash_w = VL_RAND_RESET_I(1);
    vlSelf->__PVT__priv_x_q = VL_RAND_RESET_I(2);
    vlSelf->__PVT__opcode_valid_w = VL_RAND_RESET_I(1);
    vlSelf->__PVT__issue_ra_idx_w = VL_RAND_RESET_I(5);
    vlSelf->__PVT__issue_rb_idx_w = VL_RAND_RESET_I(5);
    vlSelf->__PVT__issue_rd_idx_w = VL_RAND_RESET_I(5);
    vlSelf->__PVT__issue_sb_alloc_w = VL_RAND_RESET_I(1);
    vlSelf->__PVT__issue_exec_w = VL_RAND_RESET_I(1);
    vlSelf->__PVT__issue_lsu_w = VL_RAND_RESET_I(1);
    vlSelf->__PVT__issue_branch_w = VL_RAND_RESET_I(1);
    vlSelf->__PVT__issue_mul_w = VL_RAND_RESET_I(1);
    vlSelf->__PVT__issue_div_w = VL_RAND_RESET_I(1);
    vlSelf->__PVT__issue_csr_w = VL_RAND_RESET_I(1);
    vlSelf->__PVT__issue_invalid_w = VL_RAND_RESET_I(1);
    vlSelf->__PVT__pipe_squash_e1_e2_w = VL_RAND_RESET_I(1);
    vlSelf->__PVT__opcode_issue_r = VL_RAND_RESET_I(1);
    vlSelf->__PVT__opcode_accept_r = VL_RAND_RESET_I(1);
    vlSelf->__PVT__pipe_stall_raw_w = VL_RAND_RESET_I(1);
    vlSelf->__PVT__pipe_load_e1_w = VL_RAND_RESET_I(1);
    vlSelf->__PVT__pipe_store_e1_w = VL_RAND_RESET_I(1);
    vlSelf->__PVT__pipe_mul_e1_w = VL_RAND_RESET_I(1);
    vlSelf->__PVT__pipe_branch_e1_w = VL_RAND_RESET_I(1);
    vlSelf->__PVT__pipe_rd_e1_w = VL_RAND_RESET_I(5);
    vlSelf->__PVT__pipe_pc_e1_w = VL_RAND_RESET_I(32);
    vlSelf->__PVT__pipe_opcode_e1_w = VL_RAND_RESET_I(32);
    vlSelf->__PVT__pipe_operand_ra_e1_w = VL_RAND_RESET_I(32);
    vlSelf->__PVT__pipe_operand_rb_e1_w = VL_RAND_RESET_I(32);
    vlSelf->__PVT__pipe_load_e2_w = VL_RAND_RESET_I(1);
    vlSelf->__PVT__pipe_mul_e2_w = VL_RAND_RESET_I(1);
    vlSelf->__PVT__pipe_rd_e2_w = VL_RAND_RESET_I(5);
    vlSelf->__PVT__pipe_result_e2_w = VL_RAND_RESET_I(32);
    vlSelf->__PVT__pipe_valid_wb_w = VL_RAND_RESET_I(1);
    vlSelf->__PVT__pipe_csr_wb_w = VL_RAND_RESET_I(1);
    vlSelf->__PVT__pipe_rd_wb_w = VL_RAND_RESET_I(5);
    vlSelf->__PVT__pipe_result_wb_w = VL_RAND_RESET_I(32);
    vlSelf->__PVT__pipe_pc_wb_w = VL_RAND_RESET_I(32);
    vlSelf->__PVT__pipe_opc_wb_w = VL_RAND_RESET_I(32);
    vlSelf->__PVT__pipe_ra_val_wb_w = VL_RAND_RESET_I(32);
    vlSelf->__PVT__pipe_rb_val_wb_w = VL_RAND_RESET_I(32);
    vlSelf->__PVT__pipe_exception_wb_w = VL_RAND_RESET_I(6);
    vlSelf->__PVT__issue_fault_w = VL_RAND_RESET_I(6);
    vlSelf->__PVT__div_pending_q = VL_RAND_RESET_I(1);
    vlSelf->__PVT__csr_pending_q = VL_RAND_RESET_I(1);
    vlSelf->__PVT__scoreboard_r = VL_RAND_RESET_I(32);
    vlSelf->__PVT__issue_ra_value_w = VL_RAND_RESET_I(32);
    vlSelf->__PVT__issue_rb_value_w = VL_RAND_RESET_I(32);
    vlSelf->__PVT__issue_b_ra_value_w = VL_RAND_RESET_I(32);
    vlSelf->__PVT__issue_b_rb_value_w = VL_RAND_RESET_I(32);
    vlSelf->__PVT__issue_ra_value_r = VL_RAND_RESET_I(32);
    vlSelf->__PVT__issue_rb_value_r = VL_RAND_RESET_I(32);
    vlSelf->__PVT__v_pipe_rs1_w = VL_RAND_RESET_I(5);
    vlSelf->__PVT__v_pipe_rs2_w = VL_RAND_RESET_I(5);
    vlSelf->__Vdly__priv_x_q = VL_RAND_RESET_I(2);
    vlSelf->__Vdly__div_pending_q = VL_RAND_RESET_I(1);
    vlSelf->__Vdly__csr_pending_q = VL_RAND_RESET_I(1);
}
