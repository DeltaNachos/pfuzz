// Verilated -*- C++ -*-
// DESCRIPTION: Verilator output: Design internal header
// See Vbiriscv_top.h for the primary calling header

#ifndef VERILATED_VBIRISCV_TOP_BIRISCV_ISSUE_H_
#define VERILATED_VBIRISCV_TOP_BIRISCV_ISSUE_H_  // guard

#include "verilated.h"
class Vbiriscv_top_biriscv_pipe_ctrl;
class Vbiriscv_top_biriscv_regfile;
class Vbiriscv_top_biriscv_trace_sim;


class Vbiriscv_top__Syms;

class alignas(VL_CACHE_LINE_BYTES) Vbiriscv_top_biriscv_issue final : public VerilatedModule {
  public:
    // CELLS
    Vbiriscv_top_biriscv_pipe_ctrl* __PVT__u_pipe0_ctrl;
    Vbiriscv_top_biriscv_pipe_ctrl* __PVT__u_pipe1_ctrl;
    Vbiriscv_top_biriscv_regfile* u_regfile;
    Vbiriscv_top_biriscv_trace_sim* __PVT__u_pipe0_dec0_verif;
    Vbiriscv_top_biriscv_trace_sim* __PVT__u_pipe0_dec1_verif;

    // DESIGN SPECIFIC STATE
    // Anonymous structures to workaround compiler member-count bugs
    struct {
        VL_IN8(__PVT__clk_i,0,0);
        VL_IN8(__PVT__rst_i,0,0);
        VL_IN8(__PVT__fetch0_valid_i,0,0);
        VL_IN8(__PVT__fetch0_fault_fetch_i,0,0);
        VL_IN8(__PVT__fetch0_fault_page_i,0,0);
        VL_IN8(__PVT__fetch0_instr_exec_i,0,0);
        VL_IN8(__PVT__fetch0_instr_lsu_i,0,0);
        VL_IN8(__PVT__fetch0_instr_branch_i,0,0);
        VL_IN8(__PVT__fetch0_instr_mul_i,0,0);
        VL_IN8(__PVT__fetch0_instr_div_i,0,0);
        VL_IN8(__PVT__fetch0_instr_csr_i,0,0);
        VL_IN8(__PVT__fetch0_instr_rd_valid_i,0,0);
        VL_IN8(__PVT__fetch0_instr_invalid_i,0,0);
        VL_IN8(__PVT__fetch1_valid_i,0,0);
        VL_IN8(__PVT__fetch1_fault_fetch_i,0,0);
        VL_IN8(__PVT__fetch1_fault_page_i,0,0);
        VL_IN8(__PVT__fetch1_instr_exec_i,0,0);
        VL_IN8(__PVT__fetch1_instr_lsu_i,0,0);
        VL_IN8(__PVT__fetch1_instr_branch_i,0,0);
        VL_IN8(__PVT__fetch1_instr_mul_i,0,0);
        VL_IN8(__PVT__fetch1_instr_div_i,0,0);
        VL_IN8(__PVT__fetch1_instr_csr_i,0,0);
        VL_IN8(__PVT__fetch1_instr_rd_valid_i,0,0);
        VL_IN8(__PVT__fetch1_instr_invalid_i,0,0);
        VL_IN8(__PVT__branch_exec0_request_i,0,0);
        VL_IN8(__PVT__branch_exec0_is_taken_i,0,0);
        VL_IN8(__PVT__branch_exec0_is_not_taken_i,0,0);
        VL_IN8(__PVT__branch_exec0_is_call_i,0,0);
        VL_IN8(__PVT__branch_exec0_is_ret_i,0,0);
        VL_IN8(__PVT__branch_exec0_is_jmp_i,0,0);
        VL_IN8(__PVT__branch_d_exec0_request_i,0,0);
        VL_IN8(__PVT__branch_d_exec0_priv_i,1,0);
        VL_IN8(__PVT__branch_exec1_request_i,0,0);
        VL_IN8(__PVT__branch_exec1_is_taken_i,0,0);
        VL_IN8(__PVT__branch_exec1_is_not_taken_i,0,0);
        VL_IN8(__PVT__branch_exec1_is_call_i,0,0);
        VL_IN8(__PVT__branch_exec1_is_ret_i,0,0);
        VL_IN8(__PVT__branch_exec1_is_jmp_i,0,0);
        VL_IN8(__PVT__branch_d_exec1_request_i,0,0);
        VL_IN8(__PVT__branch_d_exec1_priv_i,1,0);
        VL_IN8(__PVT__branch_csr_request_i,0,0);
        VL_IN8(__PVT__branch_csr_priv_i,1,0);
        VL_IN8(__PVT__writeback_mem_valid_i,0,0);
        VL_IN8(__PVT__writeback_mem_exception_i,5,0);
        VL_IN8(__PVT__writeback_div_valid_i,0,0);
        VL_IN8(__PVT__csr_result_e1_write_i,0,0);
        VL_IN8(__PVT__csr_result_e1_exception_i,5,0);
        VL_IN8(__PVT__lsu_stall_i,0,0);
        VL_IN8(__PVT__take_interrupt_i,0,0);
        VL_OUT8(__PVT__fetch0_accept_o,0,0);
        VL_OUT8(__PVT__fetch1_accept_o,0,0);
        VL_OUT8(__PVT__branch_request_o,0,0);
        VL_OUT8(__PVT__branch_priv_o,1,0);
        VL_OUT8(__PVT__branch_info_request_o,0,0);
        VL_OUT8(__PVT__branch_info_is_taken_o,0,0);
        VL_OUT8(__PVT__branch_info_is_not_taken_o,0,0);
        VL_OUT8(__PVT__branch_info_is_call_o,0,0);
        VL_OUT8(__PVT__branch_info_is_ret_o,0,0);
        VL_OUT8(__PVT__branch_info_is_jmp_o,0,0);
        VL_OUT8(__PVT__exec0_opcode_valid_o,0,0);
        VL_OUT8(__PVT__exec1_opcode_valid_o,0,0);
        VL_OUT8(__PVT__lsu_opcode_valid_o,0,0);
        VL_OUT8(__PVT__csr_opcode_valid_o,0,0);
        VL_OUT8(__PVT__mul_opcode_valid_o,0,0);
    };
    struct {
        VL_OUT8(__PVT__div_opcode_valid_o,0,0);
        VL_OUT8(__PVT__opcode0_invalid_o,0,0);
        VL_OUT8(__PVT__opcode0_rd_idx_o,4,0);
        VL_OUT8(__PVT__opcode0_ra_idx_o,4,0);
        VL_OUT8(__PVT__opcode0_rb_idx_o,4,0);
        VL_OUT8(__PVT__opcode1_invalid_o,0,0);
        VL_OUT8(__PVT__opcode1_rd_idx_o,4,0);
        VL_OUT8(__PVT__opcode1_ra_idx_o,4,0);
        VL_OUT8(__PVT__opcode1_rb_idx_o,4,0);
        VL_OUT8(__PVT__lsu_opcode_invalid_o,0,0);
        VL_OUT8(__PVT__lsu_opcode_rd_idx_o,4,0);
        VL_OUT8(__PVT__lsu_opcode_ra_idx_o,4,0);
        VL_OUT8(__PVT__lsu_opcode_rb_idx_o,4,0);
        VL_OUT8(__PVT__mul_opcode_invalid_o,0,0);
        VL_OUT8(__PVT__mul_opcode_rd_idx_o,4,0);
        VL_OUT8(__PVT__mul_opcode_ra_idx_o,4,0);
        VL_OUT8(__PVT__mul_opcode_rb_idx_o,4,0);
        VL_OUT8(__PVT__csr_opcode_invalid_o,0,0);
        VL_OUT8(__PVT__csr_opcode_rd_idx_o,4,0);
        VL_OUT8(__PVT__csr_opcode_ra_idx_o,4,0);
        VL_OUT8(__PVT__csr_opcode_rb_idx_o,4,0);
        VL_OUT8(__PVT__csr_writeback_write_o,0,0);
        VL_OUT8(__PVT__csr_writeback_exception_o,5,0);
        VL_OUT8(__PVT__exec0_hold_o,0,0);
        VL_OUT8(__PVT__exec1_hold_o,0,0);
        VL_OUT8(__PVT__mul_hold_o,0,0);
        VL_OUT8(__PVT__interrupt_inhibit_o,0,0);
        CData/*0:0*/ __PVT__enable_dual_issue_w;
        CData/*0:0*/ __PVT__enable_muldiv_w;
        CData/*0:0*/ __PVT__enable_mul_bypass_w;
        CData/*0:0*/ __PVT__stall_w;
        CData/*0:0*/ __PVT__squash_w;
        CData/*0:0*/ __PVT__single_issue_w;
        CData/*0:0*/ __PVT__dual_issue_w;
        CData/*1:0*/ __PVT__priv_x_q;
        CData/*0:0*/ __PVT__mispredicted_r;
        CData/*0:0*/ __PVT__slot0_valid_r;
        CData/*0:0*/ __PVT__slot1_valid_r;
        CData/*0:0*/ __PVT__opcode_a_valid_r;
        CData/*0:0*/ __PVT__opcode_b_valid_r;
        CData/*1:0*/ __PVT__opcode_a_fault_r;
        CData/*1:0*/ __PVT__opcode_b_fault_r;
        CData/*4:0*/ __PVT__issue_a_ra_idx_w;
        CData/*4:0*/ __PVT__issue_a_rb_idx_w;
        CData/*4:0*/ __PVT__issue_a_rd_idx_w;
        CData/*0:0*/ __PVT__issue_a_sb_alloc_w;
        CData/*0:0*/ __PVT__issue_a_exec_w;
        CData/*0:0*/ __PVT__issue_a_lsu_w;
        CData/*0:0*/ __PVT__issue_a_branch_w;
        CData/*0:0*/ __PVT__issue_a_mul_w;
        CData/*0:0*/ __PVT__issue_a_div_w;
        CData/*0:0*/ __PVT__issue_a_csr_w;
        CData/*0:0*/ __PVT__issue_a_invalid_w;
        CData/*4:0*/ __PVT__issue_b_ra_idx_w;
        CData/*4:0*/ __PVT__issue_b_rb_idx_w;
        CData/*4:0*/ __PVT__issue_b_rd_idx_w;
        CData/*0:0*/ __PVT__issue_b_sb_alloc_w;
        CData/*0:0*/ __PVT__issue_b_exec_w;
        CData/*0:0*/ __PVT__issue_b_lsu_w;
        CData/*0:0*/ __PVT__issue_b_branch_w;
        CData/*0:0*/ __PVT__issue_b_mul_w;
        CData/*0:0*/ __PVT__issue_b_div_w;
        CData/*0:0*/ __PVT__issue_b_csr_w;
        CData/*0:0*/ __PVT__issue_b_invalid_w;
    };
    struct {
        CData/*0:0*/ __PVT__pipe0_squash_e1_e2_w;
        CData/*0:0*/ __PVT__pipe1_squash_e1_e2_w;
        CData/*0:0*/ __PVT__opcode_a_issue_r;
        CData/*0:0*/ __PVT__opcode_a_accept_r;
        CData/*0:0*/ __PVT__pipe0_stall_raw_w;
        CData/*0:0*/ __PVT__pipe0_load_e1_w;
        CData/*0:0*/ __PVT__pipe0_store_e1_w;
        CData/*0:0*/ __PVT__pipe0_mul_e1_w;
        CData/*0:0*/ __PVT__pipe0_branch_e1_w;
        CData/*4:0*/ __PVT__pipe0_rd_e1_w;
        CData/*0:0*/ __PVT__pipe0_load_e2_w;
        CData/*0:0*/ __PVT__pipe0_mul_e2_w;
        CData/*4:0*/ __PVT__pipe0_rd_e2_w;
        CData/*0:0*/ __PVT__pipe0_valid_wb_w;
        CData/*0:0*/ __PVT__pipe0_csr_wb_w;
        CData/*4:0*/ __PVT__pipe0_rd_wb_w;
        CData/*5:0*/ __PVT__pipe0_exception_wb_w;
        CData/*5:0*/ __PVT__issue_a_fault_w;
        CData/*0:0*/ __PVT__opcode_b_issue_r;
        CData/*0:0*/ __PVT__opcode_b_accept_r;
        CData/*0:0*/ __PVT__pipe1_stall_raw_w;
        CData/*0:0*/ __PVT__pipe1_load_e1_w;
        CData/*0:0*/ __PVT__pipe1_store_e1_w;
        CData/*0:0*/ __PVT__pipe1_mul_e1_w;
        CData/*0:0*/ __PVT__pipe1_branch_e1_w;
        CData/*4:0*/ __PVT__pipe1_rd_e1_w;
        CData/*0:0*/ __PVT__pipe1_load_e2_w;
        CData/*0:0*/ __PVT__pipe1_mul_e2_w;
        CData/*4:0*/ __PVT__pipe1_rd_e2_w;
        CData/*0:0*/ __PVT__pipe1_valid_wb_w;
        CData/*4:0*/ __PVT__pipe1_rd_wb_w;
        CData/*5:0*/ __PVT__pipe1_exception_wb_w;
        CData/*5:0*/ __PVT__issue_b_fault_w;
        CData/*0:0*/ __PVT__div_pending_q;
        CData/*0:0*/ __PVT__csr_pending_q;
        CData/*0:0*/ __PVT__pipe1_mux_lsu_r;
        CData/*0:0*/ __PVT__pipe1_mux_mul_r;
        CData/*0:0*/ __PVT__pipe1_ok_w;
        CData/*0:0*/ __PVT__dual_issue_ok_w;
        CData/*4:0*/ __PVT__v_pipe0_rs1_w;
        CData/*4:0*/ __PVT__v_pipe0_rs2_w;
        CData/*4:0*/ __PVT__v_pipe1_rs1_w;
        CData/*4:0*/ __PVT__v_pipe1_rs2_w;
        CData/*1:0*/ __Vdly__priv_x_q;
        CData/*0:0*/ __Vdly__div_pending_q;
        CData/*0:0*/ __Vdly__csr_pending_q;
        VL_OUT16(__PVT__csr_writeback_waddr_o,11,0);
        VL_IN(__PVT__fetch0_instr_i,31,0);
        VL_IN(__PVT__fetch0_pc_i,31,0);
        VL_IN(__PVT__fetch1_instr_i,31,0);
        VL_IN(__PVT__fetch1_pc_i,31,0);
        VL_IN(__PVT__branch_exec0_source_i,31,0);
        VL_IN(__PVT__branch_exec0_pc_i,31,0);
        VL_IN(__PVT__branch_d_exec0_pc_i,31,0);
        VL_IN(__PVT__branch_exec1_source_i,31,0);
        VL_IN(__PVT__branch_exec1_pc_i,31,0);
        VL_IN(__PVT__branch_d_exec1_pc_i,31,0);
        VL_IN(__PVT__branch_csr_pc_i,31,0);
        VL_IN(__PVT__writeback_exec0_value_i,31,0);
        VL_IN(__PVT__writeback_exec1_value_i,31,0);
        VL_IN(__PVT__writeback_mem_value_i,31,0);
        VL_IN(__PVT__writeback_mul_value_i,31,0);
        VL_IN(__PVT__writeback_div_value_i,31,0);
        VL_IN(__PVT__csr_result_e1_value_i,31,0);
    };
    struct {
        VL_IN(__PVT__csr_result_e1_wdata_i,31,0);
        VL_OUT(__PVT__branch_pc_o,31,0);
        VL_OUT(__PVT__branch_info_source_o,31,0);
        VL_OUT(__PVT__branch_info_pc_o,31,0);
        VL_OUT(__PVT__opcode0_opcode_o,31,0);
        VL_OUT(__PVT__opcode0_pc_o,31,0);
        VL_OUT(__PVT__opcode0_ra_operand_o,31,0);
        VL_OUT(__PVT__opcode0_rb_operand_o,31,0);
        VL_OUT(__PVT__opcode1_opcode_o,31,0);
        VL_OUT(__PVT__opcode1_pc_o,31,0);
        VL_OUT(__PVT__opcode1_ra_operand_o,31,0);
        VL_OUT(__PVT__opcode1_rb_operand_o,31,0);
        VL_OUT(__PVT__lsu_opcode_opcode_o,31,0);
        VL_OUT(__PVT__lsu_opcode_pc_o,31,0);
        VL_OUT(__PVT__lsu_opcode_ra_operand_o,31,0);
        VL_OUT(__PVT__lsu_opcode_rb_operand_o,31,0);
        VL_OUT(__PVT__mul_opcode_opcode_o,31,0);
        VL_OUT(__PVT__mul_opcode_pc_o,31,0);
        VL_OUT(__PVT__mul_opcode_ra_operand_o,31,0);
        VL_OUT(__PVT__mul_opcode_rb_operand_o,31,0);
        VL_OUT(__PVT__csr_opcode_opcode_o,31,0);
        VL_OUT(__PVT__csr_opcode_pc_o,31,0);
        VL_OUT(__PVT__csr_opcode_ra_operand_o,31,0);
        VL_OUT(__PVT__csr_opcode_rb_operand_o,31,0);
        VL_OUT(__PVT__csr_writeback_wdata_o,31,0);
        VL_OUT(__PVT__csr_writeback_exception_pc_o,31,0);
        VL_OUT(__PVT__csr_writeback_exception_addr_o,31,0);
        IData/*31:0*/ __PVT__pc_x_q;
        IData/*31:0*/ __PVT__opcode_a_r;
        IData/*31:0*/ __PVT__opcode_b_r;
        IData/*31:0*/ __PVT__opcode_a_pc_r;
        IData/*31:0*/ __PVT__opcode_b_pc_r;
        IData/*31:0*/ __PVT__pipe0_pc_e1_w;
        IData/*31:0*/ __PVT__pipe0_opcode_e1_w;
        IData/*31:0*/ __PVT__pipe0_operand_ra_e1_w;
        IData/*31:0*/ __PVT__pipe0_operand_rb_e1_w;
        IData/*31:0*/ __PVT__pipe0_result_e2_w;
        IData/*31:0*/ __PVT__pipe0_result_wb_w;
        IData/*31:0*/ __PVT__pipe0_pc_wb_w;
        IData/*31:0*/ __PVT__pipe0_opc_wb_w;
        IData/*31:0*/ __PVT__pipe0_ra_val_wb_w;
        IData/*31:0*/ __PVT__pipe0_rb_val_wb_w;
        IData/*31:0*/ __PVT__pipe1_pc_e1_w;
        IData/*31:0*/ __PVT__pipe1_opcode_e1_w;
        IData/*31:0*/ __PVT__pipe1_operand_ra_e1_w;
        IData/*31:0*/ __PVT__pipe1_operand_rb_e1_w;
        IData/*31:0*/ __PVT__pipe1_result_e2_w;
        IData/*31:0*/ __PVT__pipe1_result_wb_w;
        IData/*31:0*/ __PVT__pipe1_pc_wb_w;
        IData/*31:0*/ __PVT__pipe1_opc_wb_w;
        IData/*31:0*/ __PVT__pipe1_ra_val_wb_w;
        IData/*31:0*/ __PVT__pipe1_rb_val_wb_w;
        IData/*31:0*/ __PVT__scoreboard_r;
        IData/*31:0*/ __PVT__issue_a_ra_value_w;
        IData/*31:0*/ __PVT__issue_a_rb_value_w;
        IData/*31:0*/ __PVT__issue_b_ra_value_w;
        IData/*31:0*/ __PVT__issue_b_rb_value_w;
        IData/*31:0*/ __PVT__issue_a_ra_value_r;
        IData/*31:0*/ __PVT__issue_a_rb_value_r;
        IData/*31:0*/ __PVT__issue_b_ra_value_r;
        IData/*31:0*/ __PVT__issue_b_rb_value_r;
        IData/*31:0*/ __Vdly__pc_x_q;
    };

    // INTERNAL VARIABLES
    Vbiriscv_top__Syms* const vlSymsp;

    // CONSTRUCTORS
    Vbiriscv_top_biriscv_issue(Vbiriscv_top__Syms* symsp, const char* v__name);
    ~Vbiriscv_top_biriscv_issue();
    VL_UNCOPYABLE(Vbiriscv_top_biriscv_issue);

    // INTERNAL METHODS
    void __Vconfigure(bool first);
    uint32_t complete_exception();
    uint32_t complete_opcode0();
    uint32_t complete_opcode1();
    uint32_t complete_pc0();
    uint32_t complete_pc1();
    uint32_t complete_ra0();
    uint32_t complete_ra1();
    uint32_t complete_ra_val0();
    uint32_t complete_ra_val1();
    uint32_t complete_rb0();
    uint32_t complete_rb1();
    uint32_t complete_rb_val0();
    uint32_t complete_rb_val1();
    uint32_t complete_rd0();
    uint32_t complete_rd1();
    uint32_t complete_rd_val0();
    uint32_t complete_rd_val1();
    bool complete_valid0();
    bool complete_valid1();
};


#endif  // guard
